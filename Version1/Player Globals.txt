&CMD`+FLAWS u(pgo)=$+flaws *:@break findplayer(%0); @assert words(filter(#lambda/hasattrval(%qp/%%0),flaws [lattr(%qp/flaws`page`*)]))=@pemit %#=ansi(r,name(%qp) has no flaws set. This probably means this character predates the inclusion of +flaws in the application.); @pemit %#=header(Flaws: [name(%qp)]); think u(#475/format`powerflaw,%qp,FLAWS); @pemit/silent %#=header();@break cand(hasattrval(%qp,aflaws),not(isadmin(%#)))=@pemit %qp=%n just checked your flaws.;@switch/inline approved(%qp)=0,{@nspemit %#=ansi(hr,These +flaws are not approved.)}

&CMD`+FLAWSNOARG u(pgo)=$+flaws:think setq(p,%#); @assert words(filter(#lambda/hasattrval(%qp/%%0),flaws [lattr(%qp/flaws`page`*)]))=@pemit %#=ansi(r,You have no flaws.); @pemit/silent %#=header(Flaws: [name(%qp)]); think u(#475/format`powerflaw,%qp,FLAWS); @pemit/silent %#=header();@switch/inline approved(%qp)=0,{@nspemit %#=ansi(hr,These +flaws are not approved.)}

&CMD`FORMATTER u(pgo)=$+formatter *:think setq(l,sort(get(#1123/valid`formatters),name)); @break isnum(%0)=@pemit %#=if(cand(gte(%0,1),lte(%0,words(%ql))),attrib_set(%#/adminattrs`formatter,setr(f,extract(%ql,%0,1)))Formatter set to [name(%qf)].,Invalid formatter. Must be either the name of the formatter or a number from 1 to [words(%ql)].); @assert setr(f,namegraball(%ql,%0))=@pemit %#=No matches for '%0'. Try a more specific name.; @break gt(words(%qf),1)=@pemit %#=Multiple matches:%r[iter(%qf,match(%ql,%i0). [name(%i0)],,%r)]; @pemit %#=attrib_set(%#/adminattrs`formatter,%qf)Formatter set to [name(%qf)].

&CMD`FORMATTERS u(pgo)=$+formatters:@pemit %#=%rFormatters:%r[iter(sort(get(#1123/valid`formatters),name),inum(0). [name(%i0)],,%r)]%r%rCurrently using: [name(default(%#/adminattrs`formatter,get(#1123/default`formatter)))].%rUse '+formatter <name or number>' to set the formatter.%r

&CMD`RANKS u(pgo)=$ranks:think setq(l,sort(lvplayers(%l),namei)));@pemit %#=header(Ranks);@nspemit %#=align(22 20 25 4,Name,Faction,Rank,Idle);@nspemit %#=separator();@dolist/inline %ql={@nspemit %#=align(22 20 25 4,pueblize(name(%i0),+finger [name(%i0)]),getproperty(%i0,factions,1,,1),getproperty(%i0,ranks,,,1),first(timestring(Idle(%i0))))};@nspemit %#=header()

&CMD`FACHEAD u(pgo)=$+fachead:th setq(facs,sort(filterbool(#lambda/cand(get(\%0/SET`MAJOR),strmatch(get(\%0/SET`TYPE),FACTION)),u(u(gso)/FUN`LISTGROUPS)),namei));@nspemit %#=header(Fachead List - [mudname()]);@nspemit %#=align(3 18 19 28 4,Con,Faction,Name,Position,Duty);@dolist/inline %q<facs>={@dolist/inline sortkey(#lambda/get(\%0/D`GROUPS`%i0`RANK),sort(lsearch(all,type,player,elock,D`GROUP`%i0`RANK:<3),namei))=@nspemit %#=align(3 18 19 28 4,hideconn(%i0),name(%i1),pueblize(name(%i0),+finger [name(%i0)]),getproperty(%i0,rank),default(%0/duty,Off))};@nspemit %#=separator();@nspemit %#=center(ansi(hc,MCMFacheads@gmail.com),78)%r[center(Page on-duty facheads{,} then page-OK/emergency duty facheads.,78)]%r[center(Try to page the appropriate fachead,78)];@nspemit %#=header()

&CMD`XWHO u(pgo)=$xwho:th setq(who,lwhoid(%#));@nspemit %#=header(Faction Who);@dolist/inline/nobreak setr(facs,filterbool(#lambda/cand(get(\%0/SET`MAJOR),strmatch(get(\%0/SET`TYPE),FACTION)),u(u(gso)/FUN`LISTGROUPS)))={@assert words(setr(members,setinter(%q<who>,get(%i0/MEMBERS),,namei)));@nspemit %#=separator(name(%i0));@nspemit %#=table(iter(%q<members>,pueblize(name(%i0),+finger [name(%i0)]),%b,|),18,width(%#),|)};th iter(%q<facs>,setr(unaff,setdiff(strfirstof(%q<unaff>,%q<who>),get(%i0/MEMBERS))));th setq(ooc,sort(filterbool(#lambda/cor(haspower(\%0,GUEST),isadmin(\%0)),%q<unaff>),namei));th setq(unaff,setdiff(%q<unaff>,%q<ooc>,,namei));@switch/inline t(words(%q<unaff>))=1,{@nspemit %#=separator(Unaffiliated);@nspemit %#=table(iter(%q<unaff>,pueblize(name(%i0),+finger [name(%i0)]),%b,|),18,width(%#),|)};@switch/inline t(words(%q<ooc>))=1,{@nspemit %#=separator(OOC);@nspemit %#=table(iter(%q<ooc>,pueblize(name(%i0),+finger [name(%i0)]),%b,|),18,width(%#),|)};@nspemit %#=header()

&CMD`+IDLE u(pgo)=$^\+idle(\s+(.+))?$:@select/inline hasattr(%#,idle)[switch(%2,,setq(r,Idle)1,setq(r,%2)0)]=11,{@remit/silent %l=setq(m,%N returns from: [get(%#/idle)])[uldefault(%l/format-ooc,<OOC> %qm,%qm,%#)];@idle %#;@pemit %#=ansi(h,Your RP status is currently:) [ulocal(#3326/fun`status,%#)]},10,{@pemit %#=Your idle has been updated to: %qr;@idle %#=%qr},0?,{@remit/silent %l=setq(m,%N goes idle: %qr)[uldefault(%l/format-ooc,<OOC> %qm,%qm,%#)];@idle %#=%qr}
@set u(pgo)/CMD`+IDLE=regexp

&ACONNECT u(pgo)=@assert haspower(%#,guest);@cemit/noisy Guest=name(%#) has entered the MUSH.;@wait 5=@pemit %#=Welcome to Multiverse Crisis MUSH.  Due to problems with trolls and spammers we ask that you please keep the over-use of the guest channel down, as well as avoid excessively silly topics such as trying to apply for a sandwich (similar events have actually happened).  To use the guest channels type '+g Hello' without the single quotes.  If our staffers seem a bit strict about this please don't mistake this for unfriendliness - we're just trying to keep things sane and keep the guest channel from being entirely clogged with things.  If you have any questions contact an admin.  Thank you!%r%r[center(ansi(h,>>> Please read our FAQ at http://www.mcmush.org/faq <<<),78)]

&ADISCONNECT u(pgo)=@assert haspower(%#,guest);@cemit/noisy Guest=name(%#) has disconnected from the MUSH.;@switch/inline cstatus(Recruitment,%#)=Off,{},{@channel/off Recruitment=%#}; @chan/on Guest=%#};&lastseconds %#=secs()

&GFN`GETFACTION u(pgo)=getproperty(%0,faction)

&GFN`GETSPECIES u(pgo)=getproperty(%0,species)

&MUSHBASIC2_CMD u(pgo)=$mushbasic2:@pemit %#=MOVEMENT%rMovement is accomplished by looking at the exits located at the bottom of a room's description.  To look at the description fo the room you're standing in, type 'look'.%r%rYou should see something like this:%r%rA Room%rThis is the room description!%rContents:%rAn Object%r<O>ut leads to Another Room%r<I>n leads to Road 47%r%rIn order to move to one of the other rooms,  you would either use 'O' for Out, or 'I', for In.  These are called 'exits' and can be named anything, but are most commonly <E>ast, <S>outh, <N>orth, <W>est, <I>n, <O>ut, <U>p, or <D>own.  Note that when there's a character or characters in the exit name or in front of the exit name, this is a shortcut as opposed to typing out the entire exit name.%r%rType 'mushbasic3' to continue.
&MUSHBASIC3_CMD u(pgo)=$mushbasic3:@pemit %#=CHANNELS%rChannels are like a small, built-in chat system.  There are several channels on the MUSH, both to facilitate OOC (Out Of Character) and IC (In Character) communication.  here are the most important commands:%r%r@chan/list - lists all available channels.%r@chan/on <channel> - join channel named <channel>.%r@chan/off <channel> - leave channel named <channel>.%r@chan/gag <channel> - gag channel named <channel>.%r@chan/ungag <channel> - ungag channel named <channel>.%r%rChannels can be spoken on by using a + character, combined with the first few letters of the channel name.  For example, to speak on Public, you might type '+pub Hi', which would result in <Public> Jim says, "Hi".  Note that Guests can only speak on the Guest channel.
&MUSHBASIC_CMD u(pgo)=$mushbasic:@pemit %#=MUSH Basics%r%rBasic commands:%rsay <phrase> - makes you say <phrase>, i.e. say Hi -> Jim says, "Hi."%rpose <pose> - makes you 'do' something, i.e. pose waves -> Jim waves%rlook - shows you the contents of a room and it's description%rlook <target> - shows you the contents and description of <target>, i.e. look joe shows you joe's description.%r%rObjects:%rtake <object> - pick up <object>.  Note that objects do not have special powers - this is not a MUD - it's often rude to pick up other's objects without permission.%rdrop <object> - drop <object> if you have it in your inventory.  Note that objects do not have special powers - this is not a MUD.%renter <object> - enter <object>, if you can enter that object.%rleave - leave an object you entered with object.%r%rhelp - shows basic MUSH help.%r+help - shows commands extended to the MUSH command set on this particular MUSH.%rnews - shows files about the particular MUSH you are on.%r%r+bbread - lets you read the bulletin board system%r+bbread <#> - lets you read board #%r+bbread <#>/A - lets you read post A on board #%rFor more help on the bulletin board system, read +help bb%r%rType 'mushbasic2' to continue.

&CMD`RWHO u(pgo)=$^(?\:rwho|fwho)(?\: +(.+?))?$:@switch/inline strlen(%1)=0,{@assert strlen(setr(fac,getproperty(%#,faction)))=@nspemit %#=u(RFN`MSGHEAD,WHO) You are not in a faction!;@force/inline %#=+gwho %q<fac>},{@force/inline %#=+gwho %1}
@set u(pgo)/CMD`RWHO=regexp


&CMD`IWHO u(pgo)=$iwho:@force/inline %#=+who/idle

&CMD`DICE u(pgo)=$+dice *d*:think [setq(0,0)][if(strmatch(%1,*+*),[setq(a,[before(%1,+)])][setq(b,[after(%1,+)])],[setq(a,%1)][setq(b,0)])] [switch([and([gt(%0,0)],[lt(%0,50)],[gt(%qa,0)],[lt(%qa,250)],[gte(%qb,-10)],[lt(%0,250)],[isint(%0)],[isint(%qa)],[isint(%qb)])],0,[pemit(%#,I'm sorry but you can only have positive integers when you roll dice. The addition at the end must be between -10 and 250.)],[remit([loc(%#)],<[ansi(xterm130,DICE ROLLER)]> %N rolled %0d%qa [map(me/full_die,[lnum(%0)], ,[space(1)])] + %qb = [if(%qb,[setq(0,[add(%q0,%qb)])])]%q0)])]
&FULL_DIE u(pgo)=[setq(1,add(rand(%qa),1))][setq(0,add(%q0,%q1))]<%q1>

&CMD`+LAST u(pgo)=$+last *:@switch/inline [setr(0,[fullname(*%0)])]=#-1 NO SUCH OBJECT VISIBLE,{@pemit %#=No such player.},{@pemit %#=%q0 last connected: [get(*%q0/LAST)]}

&CMD`CHARID u(pgo)=$^\+charid(?\: +(.*))?$:@force/inline %#=+scene/charid %1
@set u(pgo)/CMD`CHARID=regexp