@switch/inline isdbref(u(mchelp))=0,{@tel create(MCM Help Files <MCHELP>)=u(hso)}
&mchelp u(coi)=locate(u(hso),MCM Help Files <MCHELP>,TXxi)
@parent u(mchelp)=u(coi)
@set u(mchelp)=WIZARD !NO_COMMAND

+shelp/addmain Character/Csys=[u(mchelp)]/SHLP`CSYS
&SHLP`CSYS u(mchelp)=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+addboss <target>-<bossmode>=##\,##)] - Add a bossmose to your target. ## are the Offense and Defense percentage increases it offers.%R%R[ansi(h,+removeboss <target>=<bossmode>)] - Delete a bossmode.%R%R[ansi(h,+scry <target>)] - Distance +scan that shows a little more information.%R%R[ansi(h,+adminheal <target>=<HP>)] - Hurt or heal <player>. use positive numbers to heal and negative to harm. This cannot raise HP above 200 or drop below 1.%R%R[ansi(h,+adminhp <target>=<HP>)] -Set Max HP to any value. Doesn't change current HP.%R%R[ansi(h,+aidmax <target>=<#>)] - Allow a player to raise their Aid beyond 4, for those approved for it.%R%R[ansi(h,+attributehide <target>)] - Set a boss veil that will hide a character's combat stats from +scan. Use again to toggle off. If no target's provided, will target yourself.%R%R[ansi(h,+setmaxstats <target>=<statlist or clear>)]%R[ansi(h,+setminstats <target>=<statlist or clear>)] - Set the minimum stats <target> can +restat to. The statlist is just like +restat's, so <skill> <strength> <evasion> <endurance> <aid>. use 'clear' to remove a setting. Don't set the minimum higher than the maximum or they can't +restat at all!%R%R[ansi(h,+statcheck)] - List anyone with stats over the normal level and what those are.%R%R[ansi(h,+plsearch <PL>)] - List everyone with the given PL. Can use operators to some degree. For instance, +plsearch >34 would be 'everyone over PL 34.'%R%R[ansi(h,+plstats)] - Show statistics over PL distribution.%R%R[ansi(h,+longcheckpl)] - Search for people with high PLs?%R%R[ansi(h,+themepls <entry>)] - Without an entry, shows all Themes and the PLs of characters in them. Can target a specific theme or use wildcards * or ? to search multiples.})]

+shelp/addmain Administration/+appinfo=[u(mchelp)]/SHLP`+APPINFO
&SHLP`+APPINFO u(mchelp)=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+setavgload <entry>)] - Sets the average app load.%R[ansi(h,+setavgwait <entry>)] - Sets the average processing wait time.%R[ansi(h,+setbugtime <entry>)] - Sets the amount of displays between waiting for apps.%R[ansi(h,+settpbugtime <entry>)] - Sets the amount of wait time displayed for TP Apps.})]

@@ +shelp/addmain Administration/+plots=[u(mchelp)]/SHLP`+PLOTS
@@ &SHLP`+PLOTS u(mchelp)=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,{})]

+help/addmain Character/+advantages=[u(mchelp)]/HLP`+ADVANTAGES
&HLP`+ADVANTAGES u(mchelp)=Syntax: [ansi(h,+advantages <target>)]%R%RDisplays advantages information for <target>. This includes powers, skills, assets, and NPCs. If <target> is omitted, it will show your own advantages. Command can be shortened to +adv.%R%RTo show an individual advantage, use the following syntax:%R%RSyntax: +advantages/<type> <target>%R%RReplace <type> with one of: powers, skills, assets, or NPCs. For example, +advantages/npcs to view NPCs.%R%RTo be notified when someone views your advantages, use:%R%R&aadvantages me=1%R%RTo clear, use:%R%R&aadvantages me

+help/addmain Character/+flaws=[u(mchelp)]/HLP`+FLAWS
&HLP`+FLAWS u(mchelp)=[ansi(h,+flaws <target>)]%R%RShows the flaws information for <target>, i.e. +flaws Richie would show the flaw information for Richie.%R+flaws without any parameters will display your own flaw listing.

+help/addmain Community/+appinfo=[u(mchelp)]/HLP`+APPINFO
&HLP`+APPINFO u(mchelp)=[ansi(h,+appinfo)]%R%RDisplays a current 'scoreboard' as to what's going on app-wise. These are rough estimates and NOT promises - however, you ARE expected to wait the amount of days indicated before bugging a charstaffer. Failure to do so may result in you being shoved to the end of the queue.

+help/addmain Communications/+gripe=[u(mchelp)]/HLP`+GRIPE
&HLP`+GRIPE u(mchelp)=This is for sending a complaint about a player to the admin. It's not for IC issues - for that, you may be looking for +report.%R%R[ansi(hw,+gripe <name>=<text>)]%R%RDue to abuse of the feedback systems, identification information will be logged but only accessible to the system administrator and director of the server. What this means is that gripes and feedbacks are still anonymous to admin unless a serious issue requires identifying the player who sent in the feedback or gripe.

+help/addmain Communications/+report=[u(mchelp)]/HLP`+REPORT
&HLP`+REPORT u(mchelp)=This is a form of +feedback that will be sent to the facheads in addition to the admin. It should be used for the purpose of reporting complaints that are relevant to the facheads- misuse of Officer power, the misbehavior of people within your faction in general, or simply to get their attention for something like a capture/infiltration/defection request, etc.%R%R[ansi(h,+report <subject>=<text>)]%R%RAs with +feedback and +gripe, it is mostly anonymous unless you sign your name (otherwise your identity can only be checked by one of the two people with shell access), so if you want to be known as having submitted something you will need to sign it yourself in the body of the report.

+help/addmain Communications/+feedback=[u(mchelp)]/HLP`+FEEDBACK
&HLP`+FEEDBACK u(mchelp)=This is a command for sending a message to the admin, similar to the @mail message. Please don't abuse this, nor is this the place for anything IC. If you need us to reply, include your name within the feedback.%R%R[ansi(h,+feedback <subject>=<text>)]%R%RDue to abuse of the feedback systems, identification information will be logged but only accessible to the system administrator and director of the server. What this means is that gripes and feedbacks are still anonymous to admin unless a serious issue requires identifying the player who sent in the feedback or gripe.%R%R<title> must not contain a / or = and must be less than or equal to 24 characters in length.%R%RExample: +feedback Pie=Pie tastes good.

+help/addmain Character/Alerts=These are alerts for when someone views something about your character. All three will be covered here.%R%Rsyntax - &aadvantages me=1%R%RThis flag will cause you to be notified when someone checks your +advantages listing.%R%Rsyntax - &aflaws me=1%R%RThis flag will cause you to be notified when someone checks your +flaws listing.%R%Rsyntax - &afinger me=1%R%RThis flag will cause you to be notified when someone checks your +finger info.%R%RTo shut these off use the same command except replace the 1 with a 0.%R%RAlso for look notification there is @adesc. An example of this one is:%R%R@adesc me=think \%n just looked at you.%R%RPlease see 'help @adesc' for information on this command.

+help/addmain Community/+fachead=Syntax: +fachead%R%RThis command lists the leading members of the game's factions.%R%R(NOTE: For those who are actually on here use &job me= and &duty me= to set the position and duty respectively.)

+help/addmain Roleplaying/+healinfo=Syntax: +healinfo%R%RUse: Allows you to check the current setup of healing times, relevant modifiers, and how they interact.

+help/addmain Communications/+rchannel=Syntax: +rchannel <description>=<colors of channel name>%R%RUse: This command requests a supplemental channel. It will have a name like this:%R%R%B#X-Supplemental%R%RYou can only request one supplemental channel at a time. It will remain for an hour and fifteen minutes after everyone on the channel has gone idle, and then it will delete itself. The description field is self-explanatory. The colors are based on ansi color, the codes for which may be found in Help Ansi()%R%RSo for example:%R%R+rchannel TP Scene Channel=r%RWould produce: [ansi(r,1X-Supplemental)]%R%RAdding a color is optional.

+help/addmain Character/+armor=[u(mchelp)]/HLP`+ARMOR
&HLP`+ARMOR u(mchelp)=This system allows you to easily switch between saved stat values, and is linked to the +desc code.%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+armor <mode>)] - This changes your stats to those of a previously saved armor form. If you have a desc with the same name, it sets that desc on you as well. Using this in combat counts as your action for the turn, at least, and notifies those around you that you have changed your stats.%R[ansi(h,+armor/add <mode>)] - This saves your current stats as an armor form.%R[ansi(h,+armor/del <mode>)] - This allows you to delete a saved armor form.%R[ansi(h,+armor/view <mode>)] - This command lets you check the stats an armor form has.%R[ansi(h,+armor/list)] - This lists all your armor forms. If the name is in red, that means you have a saved desc of the same name, and switching to that armor form will set that desc on you.%R[ansi(h,&<armor name>_transform me=<Transformation message>)] - If you wish to customise the message used when you switch to a specific armor, use this syntax. To remove a transform message, just use &<armor name>_transform me})]

+help/addmain Character/+desc=The multidescer system allows one to use multiple descriptions on their character and switch between them 'on the fly'. The commands for this system are as follows:%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+desc/add <Name>)] - Adds your current desc to the list of descriptions under the name <Name>.%R%R[ansi(h,+desc/del <Name>)] - Deletes the desc <Name> from your current list of descs.%R%R[ansi(h,+desc/list)] - Displays a current list of descs on your character.%R%R[ansi(h,+desc <Name>)] - sets your current desc to the desc named <Name>. Note that this desc must appear in your desc list displayed by +desc/list.%R%R[ansi(h,+desc/view)] <Name> - views a desc currently in your desc list without putting it onto your character.%R%R[ansi(h,+desc/noisy <Name>)] - sets a desc in a manner similar to the afforementioned +desc, but also announces the desc change in the room you're currently occupying.})]

+help/addmain Community/+plots=Syntax: +plots%R%RUse: Checking the current ongoing plots and their schedules.

+help/addmain Character/+idle=Syntax: +idle%R%RThis command will set you idle with the default reason 'Idle' if you are not already set idle. If you are already idle, it will clear you from being idle.%R%RSyntax: +idle <message>%R%RThis will set yourself idle with the reason procided in <message>.%R%RAn OOC message will be announced upon first setting your idle and clearing it.

+help/addmain Roleplaying/+dice=Syntax - +dice <numdice>d<numsides>%R%RRolls <numdice> of <numsides>-sided dice and announces the results to the room. For example, '+dice 3d5' rolls three five-sided dice. To make it act like the default for +roll command - that is, roll four six-sided dice, you would type '+dice 4d6'.

+help/addmain Community/ranks=Syntax: ranks%R%RLists faction, rank, and idle time of players in your current location.

@@ CHARGEN
+shelp/addmain Character/Chargen=[center([ansi(hc,Chargen Step-By-Step)],78, )]%r%rStep 0) > [ansi(hc,@tel to #495)] < which is the Character Creation Room.%r%rStep 1) > [ansi(hc,@pcreate Name=Password)] < If you are unable to do this, nag a Wizard.%r%rStep 2) Begin setting up the character using the character management machine. This will involve the usage of several commands:%r%r%t2.1) > [ansi(hc,+setprofile NAME=PROFILE CONTENTS)] < Will set the character's main +finger information.%r%t2.2) > [ansi(hc,+setquote NAME=QUOTE)] < will set the character's +finger quote.%r%t2.3) > [ansi(hc,+setfaction NAME=FACTION)] < to add the character to their faction's group.%r%t2.4) > [ansi(hc,+setrank NAME=##)] < to set the character's RANK. If somebody is in multiple factions (Major Groups, that is), you'll need to > [ansi(hc,+gfocus TARGET)] to their +group and use > [ansi(hc,+grank NAME=##)] < instead.%r%t2.5) > [ansi(hc,+setadv/powers NAME=DATA)] to set the character's POWERS. Adding people's SKILLS, ASSETS, and NPCS is identical, but replace 'powers' with the appropriate sub-command switch. (So for example, +setadv/skills.)%r%t2.6) > [ansi(hc,+setflaws NAME=DATA)] < will set the character's flaws/disadvantages.%r%t2.7) > [ansi(hc,+setlevel NAME=##)] < will set the character's power level.%r%t2.8) (OPTIONAL) > [ansi(hc,+setspecies NAME=DATA)] < will set the character's species field. You can mostly let people do this on their own, it's an unlocked attribute.%r%t2.9) (OPTIONAL) To set a custom rank on someone, > [ansi(hc,+gfocus GROUP)] < where GROUP is the group they're in (probably a faction), then > [ansi(hc,+gtitle NAME=TITLE)]. [ansi(hc,+grank NAME=##)] < where ## is the effective number of their rank (should probably match an existing rank in most cases).%r%rStep 3) Set the character's [ansi(hc,+account information)]. This is our new alts system.%r%r%t 3.1) IF THE PLAYER IS BRAND NEW: > [ansi(hc,+account/bind NAME=NEW)] <%r%t 3.2) IF THE PLAYER EXISTS HERE NOW: Check what characters they already have, and then entry the following > [ansi(hc,+account/bind NEW CHARACTER=EXISTING CHARACTER)] <%r%rStep 4) If the character needs +info files added: > [ansi(hc,+info TARGET/FILENAME=DATA)] < and then > [ansi(hc,+info/lock TARGET/FILENAME)] <. In order to lock multiple files at once, you can use > [ansi(hc,+info/lock TARGET=FILENAME|FILENAME|FILENAME)] < instead after adding them all.%r%rStep 5) (OPTIONAL) If you need to set a new password on the character > [ansi(hc,+setpassword NAME=NEWPASSWORD)] <